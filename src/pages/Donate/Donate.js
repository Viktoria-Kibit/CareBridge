import React, { useState } from "react";

const shelters = [
  "–ó–∞—Ç–∏—à–Ω–∏–π –¥—ñ–º",
  "Happy Paw",
  "–õ–∞–ø–∫–∞ –¥–æ–ø–æ–º–æ–≥–∏",
  "DogRescue",
  "–ö—ñ—Ç —Ç–∞ –ø–µ—Å",
];

export default function Donate() {
  const [query, setQuery] = useState("");
  const [selectedTarget, setSelectedTarget] = useState("");
  const [amount, setAmount] = useState("");
  const [comment, setComment] = useState("");

  const filteredShelters = shelters.filter((shelter) =>
    shelter.toLowerCase().includes(query.toLowerCase())
  );

  const handleDonate = () => {
    if (!selectedTarget || !amount) {
      alert("–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å —Ü—ñ–ª—å –¥–æ–Ω–∞—Ç—É —Ç–∞ —Å—É–º—É.");
      return;
    }

    alert(
      `–í–∏ –∑–∞–¥–æ–Ω–∞—Ç–∏–ª–∏ ${amount}‚Ç¥ –Ω–∞ "${
        selectedTarget === "carebridge" ? "—Ñ–æ–Ω–¥ CareBridge" : selectedTarget
      }"! –î—è–∫—É—î–º–æ üíõ`
    );

    setQuery("");
    setSelectedTarget("");
    setAmount("");
    setComment("");
  };

  return (
    <div className="max-w-2xl mx-auto p-6">
      <h1 className="text-3xl font-bold mb-6 text-center">–ó—Ä–æ–±–∏—Ç–∏ –¥–æ–Ω–∞—Ç</h1>

      <div className="bg-white rounded-xl shadow-md p-6 mb-6">
        <label className="block text-sm font-medium mb-2">
          –û–±–µ—Ä—ñ—Ç—å –ø—Ä–∏—Ç—É–ª–æ–∫ –∞–±–æ —Ñ–æ–Ω–¥:
        </label>
        <input
          type="text"
          placeholder="–ü–æ—à—É–∫ –ø—Ä–∏—Ç—É–ª–∫—É..."
          value={query}
          onChange={(e) => {
            setQuery(e.target.value);
            setSelectedTarget(""); // –æ—á–∏—â—É—î–º–æ, —è–∫—â–æ –∑–º—ñ–Ω–µ–Ω–æ –∑–∞–ø–∏—Ç
          }}
          className="w-full border rounded-md px-4 py-2 mb-2"
        />

        {query && (
          <div className="bg-white border rounded-md max-h-40 overflow-y-auto">
            {filteredShelters.length > 0 ? (
              filteredShelters.map((shelter) => (
                <div
                  key={shelter}
                  className={`px-4 py-2 cursor-pointer hover:bg-gray-100 ${
                    selectedTarget === shelter ? "bg-gray-200" : ""
                  }`}
                  onClick={() => {
                    setSelectedTarget(shelter);
                    setQuery(shelter);
                  }}
                >
                  {shelter}
                </div>
              ))
            ) : (
              <div className="px-4 py-2 text-sm text-gray-500">
                –ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ
              </div>
            )}
          </div>
        )}

        <div className="flex items-center gap-2 mt-4">
          <input
            type="radio"
            id="carebridge"
            name="donateTarget"
            checked={selectedTarget === "carebridge"}
            onChange={() => {
              setSelectedTarget("carebridge");
              setQuery("");
            }}
          />
          <label htmlFor="carebridge" className="text-sm">
            –î–æ–Ω–∞—Ç —É —Ñ–æ–Ω–¥ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∏ <strong>CareBridge</strong>
          </label>
        </div>
      </div>

      <div className="bg-white rounded-xl shadow-md p-6">
        <label className="block text-sm font-medium mb-2">
          –°—É–º–∞ –¥–æ–Ω–∞—Ç—É (‚Ç¥):
        </label>
        <input
          type="number"
          min="1"
          value={amount}
          onChange={(e) => setAmount(e.target.value)}
          className="w-full border rounded-md px-4 py-2 mb-4"
        />

        <label className="block text-sm font-medium mb-2">
          –ö–æ–º–µ–Ω—Ç–∞—Ä (–Ω–µ–æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ):
        </label>
        <input
          type="text"
          placeholder="–í–∞—à–µ –ø–æ–±–∞–∂–∞–Ω–Ω—è –∞–±–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"
          value={comment}
          onChange={(e) => setComment(e.target.value)}
          className="w-full border rounded-md px-4 py-2 mb-6"
        />

        <button
          onClick={handleDonate}
          className="w-full bg-blue-600 text-white py-2 rounded-md hover:bg-blue-700 transition"
        >
          –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –¥–æ–Ω–∞—Ç
        </button>
      </div>
    </div>
  );
}
